import pandas as pd

# 示例数据
data = pd.DataFrame({
    'timestamp': pd.to_datetime([
        '2024-10-30 09:15', '2024-10-30 09:50', '2024-10-30 10:20', '2024-10-30 11:10'
    ]),
    'value': [10, 15, 20, 25]
})
data = data.set_index('timestamp')

# 用于存储分组时间和对应的总和
group_results = {}
group_start_idx = 0

while group_start_idx < len(data):
    # 当前组的基准时间（即第一个未分组数据点的时间戳）
    current_start_time = data.index[group_start_idx]
    current_end_time = current_start_time + pd.Timedelta(hours=1)
    
    # 找到所有在当前组时间范围内的数据点
    mask = (data.index >= current_start_time) & (data.index < current_end_time)
    group = data[mask]
    
    # 计算当前分组中 'value' 列的总和
    group_sum = group['value'].sum()
    
    # 将分组时间和总和存入字典，时间作为索引
    group_results[current_start_time] = group_sum
    
    # 跳到下一个未分组的数据点
    group_start_idx += len(group)

# 将结果字典转换为 DataFrame
group_sums_df = pd.DataFrame.from_dict(group_results, orient='index', columns=['sum'])
print(group_sums_df)
